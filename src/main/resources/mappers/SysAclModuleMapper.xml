<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yangxin.permission.dao.SysAclModuleMapper">
  <resultMap id="BaseResultMap" type="org.yangxin.permission.model.SysAclModule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
    <result column="operator_ip" jdbcType="VARCHAR" property="operatorIp" />
  </resultMap>

  <sql id="Base_Column_List">
    id, name, parent_id, level, seq, status, remark, operator, operator_time, operator_ip
  </sql>

  <select id="countByParentId" parameterType="int" resultType="int">
    select count(*)
    from sys_acl_module
    where parent_id = #{aclModuleId}
  </select>

  <update id="batchUpdateLevel" parameterType="map">
    <foreach collection="sysAclModuleList" item="sysAclModule" separator=";">
      update sys_acl_module
      set level = #{sysAclModule.level}
      where id = #{sysAclModule.id}
    </foreach>
  </update>

  <select id="getChildAclModuleListByLevel" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sys_acl_module
    where level like #{level}
  </select>

  <select id="countByNameAndParentId" parameterType="map" resultType="int">
    select count(*)
    from sys_acl_module
    where name = #{name}
    <if test="parentId != null">
      and parent_id = #{parentId}
    </if>
    <if test="id != null">
      and id != #{id}
    </if>
  </select>

  <select id="getAllAclModule" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from sys_acl_module
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_acl_module
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_acl_module
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.yangxin.permission.model.SysAclModule">
    insert into sys_acl_module (id, name, parent_id, 
      level, seq, status, 
      remark, operator, operator_time, 
      operator_ip)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{level,jdbcType=VARCHAR}, #{seq,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, #{operatorTime,jdbcType=TIMESTAMP}, 
      #{operatorIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.yangxin.permission.model.SysAclModule">
    insert into sys_acl_module
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="operatorTime != null">
        operator_time,
      </if>
      <if test="operatorIp != null">
        operator_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null">
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorIp != null">
        #{operatorIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.yangxin.permission.model.SysAclModule">
    update sys_acl_module
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null">
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operatorIp != null">
        operator_ip = #{operatorIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yangxin.permission.model.SysAclModule">
    update sys_acl_module
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      level = #{level,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      operator_ip = #{operatorIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>